{"version":3,"sources":["helpers/dates.js","components/NavOption.js","components/Nav.js","components/ListTitle.js","components/MessageCard.js","components/MessageList.js","components/SortMenu.js","components/Button.js","components/Messages.js","components/App.js","index.js"],"names":["days","months","NavOption","active","text","type","count","onViewChange","className","onClick","Nav","view","inboxCount","deletedCount","href","MessagesTitle","title","MessageCard","message","onDelete","content","senderUuid","timeStamp","messageId","MessageList","this","props","messages","map","key","length","renderMessages","React","Component","SortMenu","state","sortBy","option","setState","onSort","onOptionClick","Button","onMoreMessages","Messages","index","slice","ListTitle","getMessageView","App","order","reversedMessages","reverse","id","findIndex","deletedMessage","splice","deleted","formatMessages","data","cache","deDupedMessages","forEach","uuid","formatDate","sentAt","push","sort","a","b","isoDate","date","Date","getDay","getMonth","getDate","getFullYear","formatTime","getHours","getMinutes","hours","minutes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9b1613b.chunk.js","sourcesContent":["export const days = [\n  'Sun',\n  'Mon',\n  'Tues',\n  'Weds',\n  'Thurs',\n  'Fri',\n  'Sat'\n];\n\nexport const months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'June',\n  'July',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n];\n","import React from 'react';\nimport '../sass/Nav.scss';\n\nconst NavOption = ({ active, text, type, count, onViewChange }) => {\n  return (\n    <div className={`nav__option ${active ? 'active' : null}`} onClick={() => onViewChange(type)}>\n      <div className={`option__icon option__icon--${type}`}></div>\n      <div className=\"option__name\">{text}</div>\n      <div className=\"option__count\"><p>{count}</p></div>\n    </div>\n  )\n}\n\nexport default NavOption;\n","import React from 'react';\nimport NavOption from './NavOption';\nimport '../sass/Nav.scss';\n\nconst Nav = ({ view, inboxCount, deletedCount, onViewChange }) => {\n  return (\n    <div className=\"nav\">\n      <div className=\"nav__icon-box\">\n        <div className=\"nav__icon\"></div>\n      </div>\n      <div className=\"nav__options\">\n        <NavOption\n          active={ view === 'inbox' }\n          text=\"Inbox\"\n          type=\"inbox\"\n          count={inboxCount}\n          onViewChange={onViewChange}\n        />\n        <NavOption\n          active={ view === 'trash' }\n          text=\"Trash\"\n          type=\"trash\"\n          count={deletedCount}\n          onViewChange={onViewChange}\n        />\n      </div>\n      <div className=\"nav__footer\">\n        This is a take-home project by Lisa Siva for Modern Health. Thanks for taking the time to review it! Icons courtesy of <a href=\"https://fontawesome.com/license\" className=\"link--inline\">Font Awesome</a>.\n      </div>\n    </div>\n  )\n}\n\nexport default Nav;\n","import React from 'react';\nimport '../sass/Messages.scss';\n\nconst MessagesTitle= ({ title }) => {\n  return (\n    <div className=\"list__title\">\n      <p>{title}</p>\n    </div>\n  )\n}\n\nexport default MessagesTitle;\n","import React from 'react';\nimport '../sass/Messages.scss';\n\nconst MessageCard = ({ message, onDelete }) => {\n  const { content, senderUuid, timeStamp, messageId } = message;\n  return (\n    <div className=\"card\">\n      <div className=\"card__details\">\n        <div className=\"card__header\">\n          <div className=\"card__header--sender\">{senderUuid}</div>\n          <div className=\"card__header--date\">{timeStamp}</div>\n        </div>\n        <div className=\"card__content\">\n          <p>{content}</p>\n        </div>\n      </div>\n      <div className=\"card__delete\" onClick={() => onDelete(messageId)}>\n      </div>\n    </div>\n  )\n};\n\nexport default MessageCard;\n","import React from 'react';\nimport MessageCard from './MessageCard';\nimport '../sass/Messages.scss';\n\nclass MessageList extends React.Component {\n  renderMessages() {\n    const { messages, onDelete } = this.props;\n    return messages.map(message => <MessageCard message={message} key={message.messageId} onDelete={onDelete} />);\n  }\n\n  render() {\n    const { messages, onDelete } = this.props;\n    // If there is no onDelete method, then we are rendering a list of already deleted messages\n    // 'list--deleted' class, when toggled on, will disable pointer-events \n    return (\n      <div className={onDelete ? 'list' : 'list list--deleted'}>\n        {messages.length ? this.renderMessages() : <div className=\"empty-box\">No messages here!</div>}\n      </div>\n    )\n  }\n}\n\nexport default MessageList;\n","import React from 'react';\nimport '../sass/SortMenu.scss';\n\nclass SortMenu extends React.Component {\n  // Sets \"Most recent\" as the default, active option\n  constructor(props) {\n    super(props);\n    this.state = { sortBy: 'recent' };\n  }\n\n  // When sort order changes, update state on this and App component\n  onOptionClick(option) {\n    if (option !== this.state.sortBy) {\n      this.setState({ sortBy: option });\n    }\n    this.props.onSort(option);\n  }\n\n\n  render() {\n    const { sortBy } = this.state;\n    const { text } = this.props;\n    return (\n      <div className=\"sort-menu\">\n        <div className=\"sort-menu__title\">{text}</div>\n        <div\n          className={sortBy === 'recent' ? 'sort-menu__option sort-menu__option--active' : 'sort-menu__option'}\n          onClick={() => { this.onOptionClick('recent') }}>\n            Most recent\n        </div>\n        <div\n          className={sortBy === 'oldest' ? 'sort-menu__option sort-menu__option--active' : 'sort-menu__option'}\n          onClick={() => { this.onOptionClick('oldest') }}>\n          Oldest\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SortMenu;\n","import React from 'react';\nimport '../sass/Button.scss';\n\nconst Button = ({ text, onMoreMessages, type }) => {\n  return (\n    <div className={type} onClick={onMoreMessages}>\n      {text}\n    </div>\n  )\n};\n\nexport default Button;\n","import React from 'react';\nimport ListTitle from './ListTitle';\nimport MessageList from './MessageList';\nimport SortMenu from './SortMenu';\nimport Button from './Button';\n\nclass Messages extends React.Component {\n  // Render message container depending on whether we're viewing inbox or deleted messages\n  getMessageView() {\n    const { view, messages, index, onSort, onMoreMessages, onDelete } = this.props;\n    // If we're viewing current messages, show sort options and \"Show More\" button too\n    if (view === 'inbox') {\n      return (\n        <div>\n          <SortMenu onSort={onSort} text=\"Sort by:\"/>\n          <MessageList\n            messages={messages.slice(0, index)}\n            onDelete={onDelete}\n          />\n          <Button\n            text=\"Show More\"\n            onMoreMessages={onMoreMessages}\n            type={index >= messages.length ? 'button--inactive' : 'button'}\n          />\n        </div>\n      )\n    // Otherwise, just show list title and messages\n    } else {\n      return (\n        <div>\n          <ListTitle title=\"Deleted messages:\" />\n          <MessageList\n            messages={messages}\n            onDelete={onDelete}\n          />\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"messages\">\n        {this.getMessageView()}\n      </div>\n    )\n  }\n}\n\nexport default Messages;\n","import React from 'react';\nimport data from '../data';\nimport { days, months } from '../helpers/dates';\nimport Nav from './Nav';\nimport Messages from './Messages';\nimport '../sass/base.scss';\nimport '../sass/layout.scss';\n\nclass App extends React.Component {\n  // Defaults to 5 most recent messages, in descending order\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      order: 'descending',\n      index: 5,\n      deleted: [],\n      view: 'inbox'\n    };\n  }\n\n  // Updates state with formatted messages\n  componentDidMount() {\n    this.setState({ messages: this.formatMessages(data.messages) });\n  }\n\n  // Prepares messages to be added to state\n  formatMessages(messages) {\n    const cache = {};\n    const deDupedMessages = [];\n    let key;\n    messages.forEach(message => {\n      key = message.uuid + message.content;\n      // If we have not previously seen a message with this uuid + content\n      if (!cache[key]) {\n        // Update message in place\n        message.messageId = key;\n        message.timeStamp = this.formatDate(message.sentAt);\n        // Mark this message as previously seen\n        cache[key] = true;\n        // Push into new array\n        deDupedMessages.push(message);\n      }\n    })\n    // Default order to descending, most recent to oldest\n    return deDupedMessages.sort((a, b) => (a.sentAt <  b.sentAt) ? 1 : -1);\n  }\n\n  // Convert ISO string to human readable date and time\n  formatDate(isoDate) {\n    const date = new Date(isoDate);\n    return `${days[date.getDay()]}, ${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()} at ${this.formatTime(date.getHours(), date.getMinutes())}`;\n  }\n\n  // Convert 24-hour time to 12-hour time\n  formatTime(hours, minutes) {\n    return hours > 12 ? `${hours - 12}:${minutes}pm` : `${hours}:${minutes}am`;\n  }\n\n  // When user chooses a sort order different from the current order, reverse the messages\n  // Called by SortMenu (App -> Messages -> SortMenu)\n  onSort = (option) => {\n    const { messages, order } = this.state;\n    if ((option === 'oldest' && order === 'descending') || (option === 'recent' && order === 'ascending')) {\n      const reversedMessages = [...messages].reverse();\n      this.setState({\n        messages: reversedMessages,\n        order: order === 'descending' ? 'ascending' : 'descending'\n      })\n    }\n  }\n\n  // When user clicks the \"Show More\" button, increase index\n  // Called by Button (App -> Messages -> Button)\n  onMoreMessages = () => {\n    this.setState({ index: this.state.index + 5 });\n  }\n\n  // When user clicks trash icon on a message, delete that message\n  // Called by MessageCard (App -> Messages -> MessageList -> MessageCard)\n  onDelete = (id) => {\n    const messages = [...this.state.messages];\n    // Get index of message to be deleted\n    const index = messages.findIndex(message => message.messageId === id);\n    // Delete message from messages array\n    const deletedMessage = messages.splice(index, 1);\n    // Add newly deleted message to deleted array\n    const deleted = [...this.state.deleted, ...deletedMessage];\n    this.setState({\n      messages,\n      index: this.state.index - 1,\n      deleted\n    });\n  }\n\n  // When user chooses a view different from the current view, change the view\n  // Called by NavOption (App -> Nav -> NavOption)\n  onViewChange = (view) => {\n    if (view !== this.state.view) {\n      this.setState({ view });\n    }\n  }\n\n  render() {\n    const { messages, index, deleted, view } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"container__nav\">\n          <Nav\n            view={view}\n            inboxCount={messages.length}\n            deletedCount={deleted.length}\n            onViewChange={this.onViewChange}\n          />\n        </div>\n        <div className=\"container__messages\">\n          <Messages\n            view={view}\n            messages={view === 'inbox' ? messages : deleted}\n            index={index}\n            onSort={this.onSort}\n            onMoreMessages={this.onMoreMessages}\n            onDelete={view === 'inbox' ? this.onDelete : null}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}